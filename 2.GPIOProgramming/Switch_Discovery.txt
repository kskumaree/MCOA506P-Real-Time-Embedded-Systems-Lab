#include "stm32f4xx.h"
volatile unsigned int PB_state;
void configureLED(void)
{
	RCC->AHB1ENR |=(1UL<<3);
	GPIOD->MODER &= ~(0xFFUL<<12*2);
	GPIOD->MODER |= (0x01UL<<12*2);
}


void configurePB(void)
{
	RCC->AHB1ENR |=(0x1UL<<0);
	GPIOA->MODER &= ~(0x3UL<<0);

}

void msDelay(int msTime)
{
	//Assume for loop take 12 clock cycles and system clock is 16MHz
int Time=msTime*1333;
	for(int i=0;i<Time;i++);

}


int main ()
{
	configureLED();
	configurePB();



	while(1)
	{
	PB_state=(GPIOA->IDR&(0x1UL<<0));
			if(PB_state==1)
			{
				GPIOD->ODR |=(0x1UL<<12);
				
			}
			else
			{
				GPIOD->ODR |= (0x0UL<<12);
				
			}
}

}




